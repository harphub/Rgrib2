[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Deckmyn. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Deckmyn. (2023). Rgrib2: Read work GRIB binary files. R package version 1.4.2.9003, https://github.com/harphub/Rgrib2.","code":"@Manual{,   title = {Rgrib2: Read and work with GRIB binary files},   author = {Alex Deckmyn.},   year = {2023},   note = {R package version 1.4.2.9003},   url = {https://github.com/harphub/Rgrib2}, }"},{"path":[]},{"path":"/index.html","id":"an-r-package-to-decode-and-encode-grib-data","dir":"","previous_headings":"","what":"An R package to decode and encode GRIB data","title":"Read and work with GRIB binary files","text":"R package api eccodes library developed ECMWF, several functionalities added. data fields coded matrices attributes describe projection grid specifications. Usually, package used together companion package meteogrid.","code":""},{"path":"/index.html","id":"c-code","dir":"","previous_headings":"","what":"C CODE","title":"Read and work with GRIB binary files","text":"package requires library eccodes (versions <=2012 GPL, recent versions use Apache license) developed ECMWF available https://software.ecmwf.int/wiki/display/GRIB/Home","code":""},{"path":"/index.html","id":"earth-radius","dir":"","previous_headings":"","what":"EARTH RADIUS","title":"Read and work with GRIB binary files","text":"GRIB-1 files, Earth radius defined explicitely. However, WMO standard value differs used ECMWF ALADIN consortium. code uses default value!!!","code":""},{"path":"/index.html","id":"attention","dir":"","previous_headings":"","what":"ATTENTION","title":"Read and work with GRIB binary files","text":"WMO standard GRIB-1 files earth radius =6367470.0 hand, NCEP uses =6371200.0 (also hardcoded grads) ALADIN model =6371229.0 GRIB-1 possible pass Earth radius. GRIB-2, parameter ‘earth shape’. Value 0 corresponds grib-1 sphere, value 6 corresponds sphere uses ECMWF ALADIN. Strangely, grib_api returns shape=“6” radius 6367470.0 grib-1 files. inconsistent!","code":""},{"path":"/reference/GRIBhandle.html","id":null,"dir":"Reference","previous_headings":"","what":"GRIBhandle class — GRIBhandle","title":"GRIBhandle class — GRIBhandle","text":"GRIBhandle objects pointers grib message loaded memory. can read file (raw binary string) Ghandle created Gcreate. GRIBhandle objects similar connections R. can closed explicitely, really necessary general,  unless many open handles containing large fields. Freeing GRIBhandle also frees memory contains GRIB message.","code":""},{"path":"/reference/GRIBhandle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRIBhandle class — GRIBhandle","text":"","code":"Ghandle(x, message=NULL, multi=FALSE, keys=list(shortName=\"2t\"))   GhandleList()   GhandleCount()   GhandleFree(gribhandle)   GhandleFreeAll()"},{"path":"/reference/GRIBhandle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GRIBhandle class — GRIBhandle","text":"x GRIBlist class object, name GRIB file raw GRIB message. message integer indicating position list message opened. may also list eccodes key values. case, first message fits keys returned. multi Set TRUE experimental support multi-message GRIB records. gribhandle GRIBhandle","code":""},{"path":"/reference/GRIBhandle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GRIBhandle class — GRIBhandle","text":"Ghandle returns GRIBhandle class object. GhandleList() returns list current GRIBhandles. GhandleCount() returns teh number handles. GhandleFree() clears GRIBhandle. GhandleFreeAll() clears GRIBhandles.","code":""},{"path":"/reference/GRIBhandle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GRIBhandle class — GRIBhandle","text":"GRIBhandles objects store pointer GRIB message memory. x raw vector, supposed single GRIB message (message, multi ignored).","code":""},{"path":[]},{"path":"/reference/GRIBhandle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GRIBhandle class — GRIBhandle","text":"","code":"if (FALSE) { #Get 5th message in a file. h1 <- Ghandle('filename',5) GhandleList() GhandleFree(h1) }"},{"path":"/reference/Gcreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new GRIB handle — Gcreate","title":"Create a new GRIB handle — Gcreate","text":"Creates new GRIBhandle object.","code":""},{"path":"/reference/Gcreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new GRIB handle — Gcreate","text":"","code":"Gcreate(gribformat=2,domain,sample)   Genc(geofield,gribformat=2,precision=4)"},{"path":"/reference/Gcreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new GRIB handle — Gcreate","text":"gribformat Denotes GRIB edition: either 1 2. domain geodomain object defining grid. domain specified, grid definition thye sample unmodified. sample Character string. Denotes name GRIBfile used template new message. TIf undefined, default \"regular_ll_sfc_gribN\" N gribedition. geofield 'geofield' object: data matrix domain attribute. precision Numerical (decimal) precision wanted GRIB encoding.","code":""},{"path":"/reference/Gcreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new GRIB handle — Gcreate","text":"GRIBhandle new GRIB message.","code":""},{"path":"/reference/Gcreate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new GRIB handle — Gcreate","text":"commands return GRIBhandle. message can modified using Gmod. Genc fact just simple wrapper calls Gcreate Gmod.","code":""},{"path":[]},{"path":"/reference/Gcreate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new GRIB handle — Gcreate","text":"","code":"if (FALSE) { #Get first 5 records of a file. mygrib <-Gopen('filename') #return level info from all messages in the file: Ginfo(mygrib,IntPar=c(\"typeOfLevel\",\"level\"),rList=NULL) }"},{"path":"/reference/Gdec.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode a Grib message — Gdec","title":"Decode a Grib message — Gdec","text":"returns values stored grib record","code":""},{"path":"/reference/Gdec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode a Grib message — Gdec","text":"","code":"Gdec(x, field=1, level = NULL, levelType = \"P\",         get.meta = TRUE, multi = FALSE)"},{"path":"/reference/Gdec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode a Grib message — Gdec","text":"x object class \"GRIBhandle\", file name GRIBlist, case field must specified integer name. x can also GRIB message raw (byte) format. field integer indicating   position field file list. used x GRIBhandle. level, levelType Possibly add level (pressure, height surface). get.meta Logical key retrieve parameter date-time information. multi Setting TRUE turns support multi-field messages GRIB2.","code":""},{"path":"/reference/Gdec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode a Grib message — Gdec","text":"data matrix class \"geofield\" attributes time, domain description.","code":""},{"path":"/reference/Gdec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decode a Grib message — Gdec","text":"takes object class \"GRIBhandle\" input returns actual data. record can also filename GRIBlist object, case field must specified integer name.","code":""},{"path":[]},{"path":"/reference/Gdec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decode a Grib message — Gdec","text":"","code":"if (FALSE) { #Get first 5 records of a file. h1 <- Ghandle('filename',5) #decode first record mydata <- Gdec(h1) }"},{"path":"/reference/Gdescribe.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameter/time/level information from a GRIB message or file — Gdescribe","title":"Extract parameter/time/level information from a GRIB message or file — Gdescribe","text":"Wrappers Ginfo intepretation.`","code":""},{"path":"/reference/Gdescribe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameter/time/level information from a GRIB message or file — Gdescribe","text":"","code":"Gdescribe(gribhandle)   Gtime(gribhandle,...)   Glevel(gribhandle,...)"},{"path":"/reference/Gdescribe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameter/time/level information from a GRIB message or file — Gdescribe","text":"gribhandle GRIBhandle. ... Options Ginfo.","code":""},{"path":"/reference/Gdescribe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameter/time/level information from a GRIB message or file — Gdescribe","text":"Gdescribe() returns list parameter name, origin level. Gtime returns string representation forecast date range. Glevel returns level information.","code":""},{"path":"/reference/Gdescribe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract parameter/time/level information from a GRIB message or file — Gdescribe","text":"functions called Gdec extract specific information. Gdescribe uses information grib_api. local GRIB-1 tables may known grib_api, may made accessible via data table extratab. Gtime Glevel get specific information GRIBhandle.","code":""},{"path":[]},{"path":"/reference/Gdomain.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract domain from GRIB message — Ggrid","title":"Extract domain from GRIB message — Ggrid","text":"returns grid specifications GRIBhandle. Ggrid old name obsolete. use !","code":""},{"path":"/reference/Gdomain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract domain from GRIB message — Ggrid","text":"","code":"Gdomain(gribhandle)   Ggrid(gribhandle)"},{"path":"/reference/Gdomain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract domain from GRIB message — Ggrid","text":"gribhandle object class \"GRIBhandle\" (file name GRIBlist, case field must specified integer name.)","code":""},{"path":"/reference/Gdomain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract domain from GRIB message — Ggrid","text":"geodomain class object describing grid. data grib handle decoded.","code":""},{"path":"/reference/Gdomain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract domain from GRIB message — Ggrid","text":"takes object class \"GRIBhandle\" input returns domain specification geodomain class. Note limited number projections supported.","code":""},{"path":[]},{"path":"/reference/Gdomain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract domain from GRIB message — Ggrid","text":"","code":"if (FALSE) { #Get first 5 records of a file. h1 <- Ghandle('filename',5) #decode first record mydata <- Gdec(h1) }"},{"path":"/reference/Gfind.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate GRIB message inside a file — Gfind","title":"Locate GRIB message inside a file — Gfind","text":"Find position particular message (field) inside GRIB file.","code":""},{"path":"/reference/Gfind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate GRIB message inside a file — Gfind","text":"","code":"Gfind(griblist, shortName = \"t\", level = NULL, levelType = \"P\",         all = FALSE, ...)"},{"path":"/reference/Gfind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate GRIB message inside a file — Gfind","text":"griblist Either character string (filename) GRIBlist object. Anything Ginfo method. shortName character matched \"shortName\" field, integer matched parameter index. Currently, table2Version taken account. Use Glocate detailed searches. level, levelType integer according GRIB level type. may also character similar FA files (\"P\"=100,\"H\"=105 \"S\"=107). taken account level!=NULL. TRUE, fields returned. FALSE, position(s) ... used. Added HARP compatibility.","code":""},{"path":"/reference/Gfind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate GRIB message inside a file — Gfind","text":"vector message indices messages satisfy required values parameters.","code":""},{"path":"/reference/Gfind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locate GRIB message inside a file — Gfind","text":"function works first calling Ginfo list chosen parameters. list searched messages satisfy required values.","code":""},{"path":[]},{"path":"/reference/Gfind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate GRIB message inside a file — Gfind","text":"","code":"if (FALSE) { #Find T2m in a file: Gfind('filename',\"z\",levelType=\"P\",level=500) }"},{"path":"/reference/Ginfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from a GRIB message or file — Ginfo","title":"Extract information from a GRIB message or file — Ginfo","text":"Reads list  information Grib file (encoded data ).","code":""},{"path":"/reference/Ginfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from a GRIB message or file — Ginfo","text":"","code":"Ginfo(x,...) # S3 method for GRIBhandle Ginfo(x,IntPar=c(),DblPar=c(),StrPar=c(),...) # S3 method for GRIBlist Ginfo(x,IntPar=c(),DblPar=c(),StrPar=c(),rList=NULL,multi=FALSE,...) # S3 method for character Ginfo(x,IntPar=c(),DblPar=c(),StrPar=c(),rList=NULL,multi=FALSE,...)"},{"path":"/reference/Ginfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from a GRIB message or file — Ginfo","text":"x object class GRIBhandle, file name GRIBlist. first case, IntPar, StrPar, DblPar Character vectors giving names integer, character (string) numeric (double) parameters decoded message(s). parameter names described GRIB_API documentation. rList numeric vector indicating   position messages file. used x GRIBhandle. default 1 (read first message). rList NULL, messages file read. multi Logical. Setting TRUE allows multi-data messages (UNTESTED!) ... used.","code":""},{"path":"/reference/Ginfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from a GRIB message or file — Ginfo","text":"data.frame one column per parameter one row per GRIB message.","code":""},{"path":"/reference/Ginfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract information from a GRIB message or file — Ginfo","text":".","code":""},{"path":[]},{"path":"/reference/Ginfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract information from a GRIB message or file — Ginfo","text":"","code":"if (FALSE) { #Get first 5 records of a file. mygrib <-Gopen('filename') #return level info from all messages in the file: Ginfo(mygrib,IntPar=c(\"typeOfLevel\",\"level\"),rList=NULL) }"},{"path":"/reference/Glocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate GRIB message inside a file — Glocate","title":"Locate GRIB message inside a file — Glocate","text":"Find position particular message (field) insiode GRIB file.","code":""},{"path":"/reference/Glocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate GRIB message inside a file — Glocate","text":"","code":"Glocate(filename,IntPar=list(),DblPar=list(),StrPar=list(),...)"},{"path":"/reference/Glocate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate GRIB message inside a file — Glocate","text":"filename Either character string (filename) GRIBlist object. Anything Ginfo method. IntPar, StrPar, DblPar Lists parameters values wanted field. ... Options Ginfo.","code":""},{"path":"/reference/Glocate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate GRIB message inside a file — Glocate","text":"vector message indices messages satisfy required values parameters.","code":""},{"path":"/reference/Glocate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locate GRIB message inside a file — Glocate","text":"function works first calling Ginfo list chosen parameters. list searched messages satisfy required values.","code":""},{"path":[]},{"path":"/reference/Glocate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate GRIB message inside a file — Glocate","text":"","code":"if (FALSE) { #Find T2m in a file: Glocate('filename',StrPar=list(shortName=\"t2\")) }"},{"path":"/reference/Gmod.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify parameters or data from a GRIB message — Gmod","title":"Modify parameters or data from a GRIB message — Gmod","text":"Modifies parameter entries /data GRIBhandle.","code":""},{"path":"/reference/Gmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify parameters or data from a GRIB message — Gmod","text":"","code":"Gmod(gribhandle,IntPar=list(),DblPar=list(),StrPar=list(),data=NULL,        precision=NULL, nbits=NULL)"},{"path":"/reference/Gmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify parameters or data from a GRIB message — Gmod","text":"gribhandle object class GRIBhandle. IntPar, DblPar, StrPar Lists (character vectors) giving names integer, character (string) numeric (double) parameters modified message(s), new values. data Data vector encoded x. precision Integer value decimal precision GRIB packing. Alternatively, one may fix number bits per value. nbits Bits per value GRIB packing. precisied, GRIB\\_API defaults 24 bits.","code":""},{"path":"/reference/Gmod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify parameters or data from a GRIB message — Gmod","text":"return value (NULL).","code":""},{"path":[]},{"path":"/reference/Gmod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify parameters or data from a GRIB message — Gmod","text":"","code":"if (FALSE) { #Get first 5 records of a file. mygrib <-Gopen('filename') #return level info from all messages in the file: a <- Ghandle(mygrib,1) Gmod(a,IntPar=list(typeOfLevel=105,level=500),data=Gdec(a)*5) Gwrite(a,file=newfile,append=TRUE) }"},{"path":"/reference/Gopen.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Grib file — Gopen","title":"Open a Grib file — Gopen","text":"Reads basic information Grib file (data ).","code":""},{"path":"/reference/Gopen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Grib file — Gopen","text":"","code":"Gopen(filename, IntPar = c(),      DblPar = c(), StrPar = c(),     multi = FALSE, lextra=TRUE)"},{"path":"/reference/Gopen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Grib file — Gopen","text":"filename character string pointing GRIB file. IntPar,DblPar,StrPar list additional keys (besides mandatory ones) read records file. multi TRUE, multi-field messages allowed. lextra TRUE, GRIB-1 records recognized grib_api matched internal table extra table2 versions.","code":""},{"path":"/reference/Gopen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a Grib file — Gopen","text":"data.frame class GRIBlist, containing basic information data file.   default keys read every GRIB record  IntPar_main = c(\"editionNumber\", \"dataDate\", \"dataTime\",      \"validityDate\", \"validityTime\", \"Nx\", \"Ny\",     \"table2Version\", \"indicatorOfParameter\",     \"parameterCategory\", \"parameterNumber\",     \"lavelType\", \"level\"),      DblPar = c(), StrPar = c(\"shortName\", \"gridType\")","code":""},{"path":[]},{"path":"/reference/Gopen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a Grib file — Gopen","text":"","code":"if (FALSE) { #Get first 5 records of a file. mylist <- Gopen('filename') #one grib record: mylist[1,] Gdec(mylist,1) }"},{"path":"/reference/Gwrite.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a GRIB message (handle) to a file. — Gwrite","title":"Write a GRIB message (handle) to a file. — Gwrite","text":"Writes GRIB message.","code":""},{"path":"/reference/Gwrite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a GRIB message (handle) to a file. — Gwrite","text":"","code":"Gwrite(gribhandle,filename,append=TRUE)"},{"path":"/reference/Gwrite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a GRIB message (handle) to a file. — Gwrite","text":"gribhandle object class GRIBhandle. filename Character string giving file name write message . file yet exist, created. already exists, behaviour depends append. append Logical. TRUE, message appended file (exists). FALSE, complete file overwritten.","code":""},{"path":"/reference/Gwrite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a GRIB message (handle) to a file. — Gwrite","text":"NULL","code":""},{"path":[]},{"path":"/reference/Gwrite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a GRIB message (handle) to a file. — Gwrite","text":"","code":"if (FALSE) { #Get first 5 records of a file. mygrib <-Ghandle('filename',1) #return level info from all messages in the file: Gwrite(mygrib,newfile,append=TRUE) }"},{"path":"/reference/gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Tables for (reduced) gaussian grids from ECMWF — gaussian","title":"Tables for (reduced) gaussian grids from ECMWF — gaussian","text":"tables contain latitudes number longitudes various gaussian grid resolutions ECMWF. Part effort reading global data.","code":""},{"path":"/reference/grib_raw_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a raw GRIB message — grib_raw_split","title":"Parse a raw GRIB message — grib_raw_split","text":"Handle raw GRIB messages identifying location seperate records.","code":""},{"path":"/reference/grib_raw_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a raw GRIB message — grib_raw_split","text":"","code":"grib_raw_find(msg)   grib_raw_split(msg)   find_in_raw(msg, pattern=\"GRIB\")"},{"path":"/reference/grib_raw_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a raw GRIB message — grib_raw_split","text":"msg 'raw' vector, supposedly containing one GRIB records. pattern character string (ASCII) searched raw message.","code":""},{"path":"/reference/grib_raw_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a raw GRIB message — grib_raw_split","text":"find_in_raw returns vector indices raw message pattern found. grib_raw_find returns data.frame columns begin end indices seperate GRIB records. grib_raw_split returns list seperate raw GRIB records.","code":""},{"path":[]},{"path":"/reference/grib_raw_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a raw GRIB message — grib_raw_split","text":"","code":"if (FALSE) { #Get first 5 records of a file. gzf <- gzfile(\"some_zipped_gribfile\", \"rb\") msg <- readBin(gzf, what=\"raw\", n=2E7) # decode second record: Gdec(msg, 2) # or glist <- grib_raw_split(msg) mydata <- Gdec(glist[[2]]) }"},{"path":"/reference/gribtables.html","id":null,"dir":"Reference","previous_headings":"","what":"GRIB table2 versions that may not (yet) be recognised by grib_api. — gribtables","title":"GRIB table2 versions that may not (yet) be recognised by grib_api. — gribtables","text":"extratab contains grib tables available grib_api extratab2 contains grib tables available grib_api specialnames contains simple rules get similar 'shortName' results grib_api special cases.","code":""}]
